    ORG	0x4000					; 開始アドレス

	SPR_PTN_ADDR:	EQU 0x3800	; VRAM:スプライトパターンジェネレータの先頭アドレス
	SPR_ATR_ADDR:	EQU	0x1B00	; VRAM:スプライトアトリビュートエリアの先頭アドレス
    
   	LDIRVM:			EQU	0x005C	; BIOS:VRAMブロック転送
	BREAKX:			EQU 0x00B7	; BIOS CTRL+STOP

	WAIT_INI:		EQU 10		; ウェイトカウンターの初期値

START:
	CALL INIT					; 初期設定

; ====================================================================================================
; メインループ
; ====================================================================================================
MAINLOOP:
    ; ■CTRL+STOPの制御
    CALL BREAKX					; BIOS CTRL+STOP呼び出し
    							; - CTRl+STOPが押されるとキャリーフラグが立つ
    RET C						; キャリーフラグが立っている場合はBASICに戻る
	XOR A						; Aレジスタの値をクリア

	; ■ちょっとだけ待つ
    							; ウェイトカウンタの値を減算
	LD A,(WAIT)					; - AレジスタにWAITの値をロード
	DEC A						; - Aレジスタから1引く
	LD (WAIT),A					; - WAITにAレジスタの値を保存

								; ウェイトカウンタの値から処理分岐
	JR NZ,VSYNC					; - Aレジスタの値がゼロじゃなかったらVSYNCにジャンプ

								; ウェイトカウンタの値をリセット
	LD A,WAIT_INI				; - AレジスタにWAIT_INIをロード
	LD (WAIT),A					; - WAITにAレジスタの値を保存

	; ■キャラクターのアニメーション
    							; 参照先のアニメーションパターンテーブルのアドレスを求める
    LD HL,(PTN_ADDR)			; - HLレジスタにアニメーションパターンテーブルの参照アドレスの値をロード
    INC HL						; - HL=HL+1(ひとつ次のデータのアドレスへ)

								; 参照先のアニメーションパターンテーブルの値をロードする
	LD A,(HL)					; - AレジスタにHLレジスタが示すアドレスの値をロード
    OR 0						; - 0かどうか
    JR NZ,LOOP1					; - 0でなければL1にジャンプ

								; ロードした値が0の時はアニメーションパターンテーブルの先頭を参照先にする
    LD HL,PTN_TBL				; - HLレジスタにアニメーションパターンテーブルの先頭アドレスの値をロード
	LD A,(HL)					; - AレジスタにHLレジスタが示すアドレス(＝アニメーションパターンテーブルの最初のアドレス)の値をロードしなおす
LOOP1:
    LD (PTN_ADDR),HL			; アニメーションパターンテーブルの参照アドレスにHLレジスタの値を設定

	; ■スプライトパターン番号を求める
	LD A,(HL)					; AレジスタにHLレジスタが示すアドレス（＝アニメーションパターンテーブルの参照先アドレス）の値をロード
	DEC A						; A=A-1（パターンテーブルの値はスプライトパターン番号+1が設定されているため）
    							; Aレジスタの値を4倍する
	SLA A						; - A=A*2
	SLA A						; - A=A*2
	LD (SPR_ATR_DATA+2),A		; Aレジスタの値をスプライトアトリビュートエリアのスプライトパターン番号に設定

	; ■スプライトアトリビュートエリアをVRAMにブロック転送
    CALL SET_SPRATR

VSYNC:
	; ■垂直帰線待ち
	HALT

	JR MAINLOOP


; ====================================================================================================
; 初期設定
; ====================================================================================================
INIT:
	CALL SET_SPRPTN				; スプライトパターン定義
	CALL SET_SPRATR				; スプライトアトリビュート初期化

	LD HL,PTN_TBL				; アニメーションパターンテーブル参照先アドレス初期化
    LD (PTN_ADDR),HL

	LD A,WAIT_INI				; ウェイトカウンターの値を初期化
	LD (WAIT),A

	RET


; ====================================================================================================
; スプライトパターン転送
; ====================================================================================================
SET_SPRPTN:
	LD HL,SPR_PTN_DATA			; HLレジスタにスプライトデータの先頭アドレスを設定
    LD DE,SPR_PTN_ADDR			; DEレジスタにスプライトパターンジェネレータの先頭アドレスを設定
	LD BC,8*4*3					; BCレジスタにスプライトデータのサイズを指定
    CALL LDIRVM					; BIOS VRAMブロック転送

	RET


; ====================================================================================================
; スプライトアトリビュート転送
; ====================================================================================================
SET_SPRATR:
	LD HL,SPR_ATR_DATA			; HLレジスタにスプライトアトリビュートデータの先頭アドレスを設定
    LD DE,SPR_ATR_ADDR			; DEレジスタにスプライトアトリビュートエリアの先頭アドレスを設定
    LD BC,4*1					; BCレジスタにアトリビュートデータのサイズを指定
    CALL LDIRVM					; BIOS VRAMブロック転送

    RET


; ====================================================================================================
; ワークエリア
; ====================================================================================================

; ウェイト
WAIT:
	DB 10

; アニメーションパターン参照アドレス
PTN_ADDR:
	DB $00, $00

; アニメーションパターンテーブル
PTN_TBL:
	DB 1,2,3,2,0

; スプライトアトリビュートデータ
; Y座標,X座標,パターンNo,色
SPR_ATR_DATA:
	DB 90,120,2,15				; 00:プレイヤー

; ====================================================================================================
; データエリア
; ====================================================================================================

; スプライトパターンデータ
SPR_PTN_DATA:
	; 00：プレイヤーパターン1
	DB $0F,$1F,$1D,$1D,$1D,$FF,$E7,$E8
	DB $1F,$7F,$3F,$1F,$0F,$0F,$3E,$3E
	DB $F0,$F8,$B8,$B8,$B8,$F8,$E0,$10
	DB $F0,$FC,$FF,$C3,$B8,$B8,$38,$00
	; 01：プレイヤーパターン2
	DB $0F,$1F,$1D,$1D,$1D,$1F,$07,$08
	DB $1F,$3F,$FF,$DF,$0F,$0F,$3E,$3E
	DB $F0,$F8,$B8,$B8,$B8,$F8,$E0,$10
	DB $F0,$FC,$FF,$FB,$F0,$F0,$7C,$7C
	; 02：プレイヤーパターン3
	DB $0F,$1F,$1D,$1D,$1D,$1F,$07,$08
	DB $0F,$3F,$FF,$C3,$1D,$1D,$1C,$00
	DB $F0,$F8,$B8,$B8,$B8,$FF,$E7,$17
	DB $F8,$FE,$FC,$F8,$F0,$F0,$7C,$7C
