; ====================================================================================================
; asm02.asm
; ・内部10進数の加算をする
; ・内部10進数の表示を行う
; ====================================================================================================

; ====================================================================================================
; ユーザーコードデータ
; ====================================================================================================
SECTION code_user
PUBLIC _main
_main:

; ------------------------------------------------------------------------------------------------
; メイン
; ------------------------------------------------------------------------------------------------
START:
	CALL INIT				    ; 初期化処理

LOOP:
    LD DE,$01				    ; DEレジスタに加算する値を設定
							    ; BCD形式で指定する(&H50=50)
	CALL ADDSCORE               ; スコア加算サブルーチン呼び出し

    LD B,3                      ; Bレジスタに表示するデータのバイト数を指定(3x2=6桁を表示)
    LD DE,SCORE				    ; BCレジスタに指定アドレスから2桁のアドレスを設定
    LD HL,SCORELOC			    ; HLレジスタにスコアの表示開始アドレスを設定
    CALL PRTBCD                 ; スコア表示サブルーチン呼び出し

    HALT
    JR LOOP


; ------------------------------------------------------------------------------------------------
; 初期化
; ------------------------------------------------------------------------------------------------
INIT:
    ; COLOR 15,1,1
    LD A,15                     ; Aレジスタに文字色をロード 
    LD (FORCLR),A               ; Aレジスタの値をワークエリアに格納
    LD A,1                      ; Aレジスタに全景色をロード
    LD (BAKCLR),A               ; Aレジスタの値をワークエリアに格納
;    LD A,1                      ; Aレジスタに背景色をロード
    LD (BDRCLR),A               ; Aレジスタの値をワークエリアに格納

    ; SCREEN 1,2,0
    LD A,(REG1SAV)              ; AレジスタにVDPコントロールレジスタ1の値をロード
    OR 2                        ; ビット2を立てる(=スプライトモードを16x16に設定)
    LD (REG1SAV),A              ; Aレジスタの値をVDPコントロールレジスタ1のワークエリアに格納
    LD A,1                      ; Aレジスタにスクリーンモードの値を設定
    CALL CHGMOD                 ; BIOS スクリーンモード変更
    LD A,0                      ; Aレジスタにキークリックスイッチの値(0=OFF)をロード
    LD (CLIKSW),A               ; Aレジスタの値をワークエリアに格納

    ; WIDTH 32
    LD A,32                     ; AレジスタにWIDTHの値を設定
    LD (LINL32),A               ; Aレジスタの値をワークエリアに格納

    ; KEY OFF
    CALL ERAFNC                 ; BIOS ファンクションキー非表示


    LD IX,SCORE                 ; スコア初期化
    LD (IX),0
	LD (IX+1),0
    LD (IX+2),0

							    ; ■固定文字列の表示
	LD HL,$192C			        ; HLレジスタに表示先のVRAMアドレスを設定(12,9)
    LD DE,DUMMY1			    ; BCレジスタに表示文字列データのアドレスを設定
	CALL PRTSTR
	LD HL,$1952			        ; HLレジスタに表示先のVRAMアドレスを設定(18,10)
    LD DE,DUMMY2			    ; BCレジスタに表示文字列データのアドレスを設定
	CALL PRTSTR

	RET


; ------------------------------------------------------------------------------------------------
; スコア加算サブルーチン
; IN  : DE=加算する値(BCD形式で1/100の値とする、例：12000点＝0120)
; ------------------------------------------------------------------------------------------------
ADDSCORE:
	LD IX,SCORE				    ; IXレジスタにスコアデータのアドレスを設定

							    ; ■1〜2桁目の加算
	LD A,E					    ; AレジスタにEレジスタの値をロード
    ADD A,(IX+2)			    ; Aレジスタの値に(IX+2)の値を加算
    						    ; 桁溢れした場合はキャリーフラグが立つ
    DAA						    ; Aレジスタの値を内部10進に補正
    LD (IX+2),A				    ; Aレジスタの値を(IX+2)に格納
    
    						    ; ■3〜4桁目の加算
    LD A,D					    ; AレジスタにDレジスタの値をロード
    ADC A,(IX+1)			    ; Aレジスタの値に(IX+1)＋キャリーフラグを加算
    						    ; 桁溢れした場合はキャリーフラグが立つ
    DAA						    ; Aレジスタの値を内部10進に補正
    LD (IX+1),A				    ; Aレジスタの値を(IX+1)に格納
    
    						    ; ■5〜6桁目の加算
    LD A,0					    ; Aレジスタに0をロード
    ADC A,(IX)				    ; Aレジスタに(IX)＋キャリーフラグの値を加算
    						    ; 桁溢れした場合はキャリーフラグが立つ
                                ; が、これ以上桁がないので無視する
    DAA						    ; Aレジスタの値を内部10進に補正
    LD (IX),A				    ; Aレジスタの値を(IX)に格納    

    RET


; ------------------------------------------------------------------------------------------------
; 内部10進数表示サブルーチン
; BCD形式のデータを指定したVRAMアドレスに数値として表示する
; 表示する値のデータは、以下のように格納されたものとする
; [上位桁][下位桁] [上位桁][下位桁]…
; IN  : B = 表示するデータのバイト数(1バイト=2桁)
;       DE = 表示するデータのアドレス
;       HL = 表示先のVRAMアドレス
; ------------------------------------------------------------------------------------------------
PRTBCD:
	CALL PRTBCD_1			    ; データを表示

	INC DE					    ; BCレジスタの値を1加算(＝データの次のアドレスが設定される)
    INC HL					    ; HLレジスタの値を1加算(＝表示位置を1つ右に移動)

    DJNZ PRTBCD                 ; B=B-1、ゼロでなければPRTBCDへ

	RET

PRTBCD_1:
							    ; ■上1桁の処理
    LD A,(DE)				    ; Aレジスタに表示するデータのアドレスの値をロード
    SRL A					    ; Aレジスタの値を4回右シフトして、上位4ビットを取り出す
    SRL A
    SRL A
    SRL A
    CALL PRTBCD_2			    ; スコア表示
    						    ; このサブルーチン内で定義している表示処理を呼び出す
    
							    ; ■下1桁の処理
	LD A,(DE)				    ; Aレジスタにスコアのアドレスの値をロード
    INC HL					    ; HLレジスタの値を1加算(＝スコアの表示位置を1つ右に移動)

PRTBCD_2:
							    ; ■表示するデータの準備
	AND $0F				        ; 上位4ビットをゼロにする(=下位4ビットの値だけ取り出す)
    ADD A,$30				    ; 値にキャラクタコード&H30('0')を加える

	CALL WRTVRM    			    ; BIOS WRTVRM呼び出し
	    					    ; - HL : 書き込み先のVRAMアドレス
    	                        ; - A  : 書き込むデータ

    RET


; ------------------------------------------------------------------------------------------------
; 文字列表示サブルーチン
; IN  : HL=表示開始VRAMアドレス
;       DE=表示文字データの開始アドレス
; ------------------------------------------------------------------------------------------------
PRTSTR:
	LD A,(DE)				    ; AレジスタにDEレジスタの示すアドレスのデータを取得

	OR 0					    ; 0かどうか
    JR Z,PRTSTR_END			    ; 0の場合はPRTENDへ

	CALL WRTVRM				    ; BIOS WRTVRM呼び出し
	    					    ; - HL : 書き込み先のVRAMアドレス
    	                        ; - A  : 書き込むデータ

	INC HL					    ; HL=HL+1
    INC DE					    ; DE=DE+1
    JR PRTSTR

PRTSTR_END:
	RET


; ====================================================================================================
; 定数エリア
; romに格納される
; ====================================================================================================
SECTION rodata_user

; BIOSアドレス定義
RDVRM:		        EQU $004A	; BIOS RDVRM
WRTVRM:		        EQU $004D	; BIOS WRTVRM
LDIRVM:			    EQU	$005C	; BIOS:VRAMブロック転送
CHGMOD:             EQU $005F   ; BIOS:スクリーンモード変更
CHPUT:		        EQU $00A2	; BIOS CHPUT
ERAFNC:             EQU $00CC   ; BIOS:ファンクションキー非表示

; システムワークエリアアドレス定義
REG0SAV:            EQU $F3DF   ; VDPコントロールレジスタ0
REG1SAV:            EQU $F3E0   ; VDPコントロールレジスタ1
FORCLR:             EQU $F3E9   ; 前景色
BAKCLR:             EQU $F3EA   ; 背景色
BDRCLR:             EQU $F3EB   ; 周辺色
LINL32:             EQU $F3AF   ; WIDTH値
CLIKSW:             EQU $F3DB   ; キークリックスイッチ(0:OFF,0以外:ON)

; VRAMドレス定義
SCORELOC:	        EQU $194C	; スコア表示先のVPRAMアドレス

; "SCORE"
DUMMY1:
	DB "SCORE",0

; スコア下2桁の表示文字列
DUMMY2:
	DB "00",0

; ====================================================================================================
; ワークエリア
; プログラム起動時にcrtでゼロでramに設定される 
; ====================================================================================================
SECTION bss_user

; スコア
SCORE:
	DEFS 3
 
